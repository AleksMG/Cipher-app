<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üîê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à–∏—Ñ—Ä–∞—Ç–æ—Ä</title>
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #4895ef;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --success-color: #4cc9f0;
            --warning-color: #f72585;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--dark-color);
            background-color: #f5f7fa;
            padding: 20px;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        h1 {
            color: var(--primary-color);
            margin-bottom: 10px;
            font-size: 2.2rem;
        }
        
        .description {
            color: #6c757d;
            margin-bottom: 20px;
        }
        
        .card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark-color);
        }
        
        select, input, textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ced4da;
            border-radius: 6px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        select:focus, input:focus, textarea:focus {
            border-color: var(--accent-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
        }
        
        textarea {
            min-height: 120px;
            resize: vertical;
        }
        
        .btn-group {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        button {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .btn-encrypt {
            background-color: var(--primary-color);
            color: white;
        }
        
        .btn-decrypt {
            background-color: var(--success-color);
            color: white;
        }
        
        .btn-clear {
            background-color: var(--light-color);
            color: var(--dark-color);
            border: 1px solid #ced4da;
        }
        
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .btn-encrypt:hover {
            background-color: var(--secondary-color);
        }
        
        .btn-decrypt:hover {
            background-color: #3aa8d8;
        }
        
        .btn-clear:hover {
            background-color: #e9ecef;
        }
        
        .info {
            font-size: 14px;
            color: #6c757d;
            margin-top: 5px;
        }
        
        .copy-btn {
            background-color: var(--light-color);
            color: var(--dark-color);
            border: 1px solid #ced4da;
            padding: 8px 12px;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.2s;
            margin-top: 10px;
        }
        
        .copy-btn:hover {
            background-color: #e9ecef;
        }
        
        footer {
            text-align: center;
            margin-top: 30px;
            color: #6c757d;
            font-size: 14px;
        }
        
        @media (max-width: 600px) {
            .container {
                padding: 15px;
            }
            
            .btn-group {
                flex-direction: column;
            }
            
            h1 {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>üîê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à–∏—Ñ—Ä–∞—Ç–æ—Ä</h1>
            <p class="description">–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞</p>
        </header>
        
        <div class="card">
            <div class="form-group">
                <label for="language">–Ø–∑—ã–∫ –∞–ª—Ñ–∞–≤–∏—Ç–∞:</label>
                <select id="language">
                    <option value="russian">–†—É—Å—Å–∫–∏–π</option>
                    <option value="english">–ê–Ω–≥–ª–∏–π—Å–∫–∏–π</option>
                    <option value="german">–ù–µ–º–µ—Ü–∫–∏–π</option>
                </select>
            </div>
            
            <div class="form-group">
                <label for="text">–¢–µ–∫—Å—Ç:</label>
                <textarea id="text" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –¥–ª—è –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è..."></textarea>
                <p class="info">–ü—Ä–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –∏ –Ω–µ–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã</p>
            </div>
            
            <div class="form-group">
                <label for="key">–ö–ª—é—á:</label>
                <input id="key" placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞)">
                <p class="info">–ö–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞</p>
            </div>
            
            <div class="btn-group">
                <button class="btn-encrypt" onclick="encrypt()">–®–∏—Ñ—Ä–æ–≤–∞—Ç—å</button>
                <button class="btn-decrypt" onclick="decrypt()">–î–µ—à–∏—Ñ—Ä–æ–≤–∞—Ç—å</button>
                <button class="btn-clear" onclick="clearAll()">–û—á–∏—Å—Ç–∏—Ç—å</button>
            </div>
        </div>
        
        <div class="card">
            <div class="form-group">
                <label for="result">–†–µ–∑—É–ª—å—Ç–∞—Ç:</label>
                <textarea id="result" readonly></textarea>
                <button class="copy-btn" onclick="copyResult()">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç</button>
            </div>
        </div>
        
        <footer>
            <p>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —à–∏—Ñ—Ä–∞—Ç–æ—Ä &copy; 2023 | –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã</p>
        </footer>
    </div>

    <script>
        const alphabets = {
            russian: '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø',
            english: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
            german: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ√Ñ√ñ√ú√ü'
        };
        
        let currentAlphabet = alphabets.russian;
        
        document.getElementById('language').addEventListener('change', function() {
            currentAlphabet = alphabets[this.value];
        });
        
        function prepareKey(key) {
            const cleanKey = key.toUpperCase().split('').filter(c => currentAlphabet.includes(c)).join('');
            if (!cleanKey) {
                alert('–ö–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞!');
                return null;
            }
            
            const keyDigits = [];
            for (let i = 0; i < cleanKey.length; i++) {
                keyDigits.push(currentAlphabet.indexOf(cleanKey[i]) + 1);
            }
            return keyDigits;
        }
        
        function cleanText(text) {
            return text.toUpperCase().split('').filter(c => currentAlphabet.includes(c)).join('');
        }
        
        function encrypt() {
            const text = document.getElementById('text').value;
            const key = document.getElementById('key').value;
            
            const cleanedText = cleanText(text);
            if (!cleanedText) {
                alert('–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞!');
                return;
            }
            
            const keyDigits = prepareKey(key);
            if (!keyDigits) return;
            
            let result = '';
            for (let i = 0; i < cleanedText.length; i++) {
                const pos = currentAlphabet.indexOf(cleanedText[i]);
                const k = keyDigits[i % keyDigits.length];
                const code = (pos + 1) * k;
                result += code.toString().padStart(3, '0') + ' ';
            }
            
            document.getElementById('result').value = result.trim();
        }
        
        function decrypt() {
            const text = document.getElementById('text').value.trim();
            const key = document.getElementById('key').value;
            
            if (!text.match(/^(\d{3}\s*)+$/)) {
                alert('–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 3-–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏!');
                return;
            }
            
            const keyDigits = prepareKey(key);
            if (!keyDigits) return;
            
            const numbers = text.split(/\s+/);
            let result = '';
            
            for (let i = 0; i < numbers.length; i++) {
                const num = parseInt(numbers[i], 10);
                const k = keyDigits[i % keyDigits.length];
                
                if (num % k !== 0) {
                    alert(`–û—à–∏–±–∫–∞: —á–∏—Å–ª–æ ${num} –Ω–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ –∫–ª—é—á ${k}!`);
                    return;
                }
                
                const p = num / k;
                if (p < 1 || p > currentAlphabet.length) {
                    alert(`–û—à–∏–±–∫–∞: –ø–æ–∑–∏—Ü–∏—è ${p} –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∞–ª—Ñ–∞–≤–∏—Ç–∞!`);
                    return;
                }
                
                result += currentAlphabet[p - 1];
            }
            
            document.getElementById('result').value = result;
        }
        
        function clearAll() {
            document.getElementById('text').value = '';
            document.getElementById('key').value = '';
            document.getElementById('result').value = '';
        }
        
        function copyResult() {
            const result = document.getElementById('result');
            result.select();
            document.execCommand('copy');
            
            // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            const copyBtn = document.querySelector('.copy-btn');
            const originalText = copyBtn.textContent;
            copyBtn.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!';
            copyBtn.style.backgroundColor = '#4caf50';
            copyBtn.style.color = 'white';
            
            setTimeout(() => {
                copyBtn.textContent = originalText;
                copyBtn.style.backgroundColor = '';
                copyBtn.style.color = '';
            }, 2000);
        }
    </script>
</body>
</html>
